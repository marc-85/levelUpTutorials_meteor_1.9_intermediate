"use strict";

var _friendsSchema = _interopRequireDefault(require("./testHelpers/friendsSchema"));

var _expectErrorLength = _interopRequireDefault(require("./testHelpers/expectErrorLength"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable func-names, prefer-arrow-callback */
describe('SimpleSchema - minCount', function () {
  it('ensures array count is at least the minimum', function () {
    (0, _expectErrorLength.default)(_friendsSchema.default, {
      friends: [],
      enemies: []
    }).toEqual(1);
    (0, _expectErrorLength.default)(_friendsSchema.default, {
      $set: {
        friends: []
      }
    }, {
      modifier: true
    }).toEqual(1);
    (0, _expectErrorLength.default)(_friendsSchema.default, {
      $setOnInsert: {
        friends: [],
        enemies: []
      }
    }, {
      modifier: true,
      upsert: true
    }).toEqual(1);
  });
});